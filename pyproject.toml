#### hatch ####################################################################
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/app"]

[tool.hatch.version]
path = "src/app/__init__.py"

#### nitpick ##################################################################
[tool.nitpick]
style = [
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/common.toml",
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/3.11.toml",
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/pip-compile-no-hashes.toml",
]

#### project ##################################################################
[project]
name = "app"
dynamic = ["version"]
readme = "README.md"
requires-python = ">= 3.11"
authors = [{ name = "Derek Wan", email = "d.wan@icloud.com" }]
dependencies = [
  "aerich >= 0.7.1, < 0.8",
  "asyncpg >= 0.27.0, < 0.28",
  "beartype >= 0.13.0, < 0.14",
  "fastapi >= 0.95.0, < 0.96",
  "gunicorn >= 20.1.0",
  "httpx >= 0.24.0, < 0.25",
  "jinja2 >= 3.1.2, < 3.2",
  "pydantic[email] >= 1.10.7, < 1.11",
  "tortoise-orm >= 0.19.3, < 0.20",
  "uvicorn[standard] >= 0.21.1, < 0.22",
]

[project.optional-dependencies]
dev = [
  "black",
  "dycw-utilities[test]",
  "hatch",
  "pip-tools",
  "ruff",
]

#### pyright ##################################################################
[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__", ".direnv", ".git", ".venv", "src/migrations/models"]
pythonVersion= "3.11"
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportIncompatibleMethodOverride = false
reportMissingTypeArgument = false
reportPrivateUsage = false
reportPrivateImportUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedBaseClass = false
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

#### pytest ###################################################################
[tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--cov=app",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--strict-markers",
  "--tb=native"
]
filterwarnings = [
  "error",
  "ignore::beartype.roar.BeartypeDecorHintPep585DeprecationWarning",
  "ignore::DeprecationWarning",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
]
looponfailroots = ["src"]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true
